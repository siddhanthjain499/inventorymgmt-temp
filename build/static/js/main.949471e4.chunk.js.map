{"version":3,"sources":["Components/UI/SummaryCounter.module.css","Components/UI/Cart/CartDisplay.module.css","Components/Layout/Layout.module.css","..js","Components/Home/Home.js","Components/UI/PendingOrdersCard.js","Components/PendingOrders/PendingOrders.js","Components/UI/SummaryCounter.js","Components/Statistics/Statistics.js","Components/UI/OrderCards1.js","Components/UI/OrderCards2.js","Components/UI/OrderCards3.js","Components/CustomerBoard/CustomerBoard.js","Components/UI/Cart/CartDisplayTextField.js","Components/UI/Cart/CartDisplay.js","Components/UI/Popup.js","Components/AddCustomer/AddCustomerForm.js","Store/auth-context.js","Components/Utilities/Sidebar.js","Components/Layout/Layout.js","Components/UI/InventoryCard.js","Components/UI/InventoryCardUnchecked.js","Components/Inventory/InventoryForm.js","Components/Inventory/Inventory.js","Components/Login/Login.js","App.js","index.js","Components/UI/OrderCards.module.css","Components/UI/InventoryCard.module.css","Components/AddCustomer/AddCustomerForm.module.css"],"names":["module","exports",".","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","Home","useState","fetchedData","setFetchedData","fetchedPopularity","setFetchedPopularity","useEffect","database","ref","on","response","data","val","list","key","push","id","name","Name","value","Value","sort","a","b","mostOrdered","map","item","invOut","setInvOut","invItem_out","price","Price","instock","Instock","description","Description","Grid","container","spacing","sm","md","className","Paper","elevation","TotalOrders","Revenue","classes","invent_item","style","background","typedish","cost","color","fontSize","PendingOrdersCard","props","item_list","orderDetails","orderName","OrderName","orderQty","OrderQty","OrderDetails_list","xs","order_details","order_section","orderID","email","country","address","totalCost","PendingOrders","shipped","setShipped","searchTerm","setSearchterm","shippedItem","Address","Country","Email","OrderDetails","TotalCost","OrderID","TextField","autoFocus","margin","label","type","variant","onChange","event","target","filter","toLowerCase","includes","SummaryCounter","summary_name","summary_count","Statistics","popList","marginBottom","OrderCards1","action_icons","onClick","onUpdate","marginLeft","onDelete","OrderCards2","OrderCards3","CustomerBoard","tBM","setTBM","rOC","setROC","orderData","setOrderData","tbmItem","console","log","rocItem","updatedStatusHandler1","child","set","Id","remove","updatedStatusHandler2","db_pop","window","confirm","parseInt","Popularity","orderList","once","snap","i","updatedValue","updatedDeleteHandler1","updatedDeleteHandler2","updatedDeleteHandler3","tbm_list","roc_list","shipped_list","CartDisplayTextField","updatedPrice","setUpdatedPrice","defaultValue","newVal","qty","updatePriceHandler","CartDisplay","cartItems","onAddHandler","onRemoveHandler","changeCostHandler","itemsPrice","reduce","c","toFixed","Divider","length","direction","inc_btn","Popup","setItemList","open","setOpen","products","setProducts","setCartItems","handleClose","productList","product","exist","find","Dialog","onClose","maxWidth","fullWidth","DialogTitle","DialogContent","height","onGiftHandler","x","updatedList","DialogActions","border","padding","isEmpty","trim","isSelected","AddCustomerForm","commMode","setCommMode","paymentMethod","setPaymentMethod","setTotalCost","itemList","finalItemList","setFinalItemList","history","useHistory","nameRef","useRef","countryRef","addressRef","idRef","walletRef","orderRef","discountRef","customerRef","wallet","order","comm","payment","discount","customer","formInputValidity","setFormInputValidity","marginTop","home_text_heading","onSubmit","preventDefault","enteredName","current","enteredCountry","enteredAddress","enteredId","enteredWallet","enteredOrder","enteredDiscount","enteredCustomer","enteredItemList","enteredNameIsValid","enteredCountryIsValid","enteredAddressIsValid","enteredIdIsValid","enteredWalletIsValid","enteredOrderIsValid","enteredDiscountIsValid","enteredCustomerIsValid","enteredCommIsValid","enteredPaymentMethodIsValid","enteredItemListIsValid","CommMode","Payment","Wallet","OrderNotes","Discount","CusotomerNotes","Date","now","cus_form","inputRef","error","FormControl","InputLabel","Select","labelId","MenuItem","multiline","right_grid","Alert","severity","items","hello","Button","submit_btn","AuthContext","React","createContext","token","isLoggedIn","login","logout","AuthContextProvider","setToken","userIsLoggedIn","contextValue","Provider","children","Sidebar","authCtx","useContext","to","activeClassName","Layout","layout","main","InventoryCard","updatedStatusHandler","status_btn","InventoryCardUnchecked","uncheckedStatusHandler","InventoryForm","setFormValidity","costRef","descriptionRef","formValidity","inputMode","rows","enteredCost","enteredDescription","enteredCostIsValid","enteredDescriptionIsValid","Inventory","invIn","setInvIn","invItem_in","inv_list","inv_list_out","Login","emailRef","passwordRef","width","backgroundColor","align","Avatar","enteredEmail","enteredPassword","fetch","method","body","JSON","stringify","password","returnSecureToken","headers","then","res","ok","json","Error","idToken","catch","err","alert","message","placeholder","required","App","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.949471e4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"summary_name\":\"SummaryCounter_summary_name__281xn\",\"summ_card_col\":\"SummaryCounter_summ_card_col__1YTF2\",\"summ_card\":\"SummaryCounter_summ_card__FLDak\",\"summary_count\":\"SummaryCounter_summary_count__ADkiA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inc_btn\":\"CartDisplay_inc_btn__aR4X9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"Layout_layout__2LVI_\",\"main\":\"Layout_main__2OHNH\"};","import . from '.';\r\n\r\nconst .Config = {\r\n    apiKey: \"AIzaSyCir6THbXYEXyts-owoowDVRo7XVXqZPFQ\",\r\n    authDomain: \"rootlab-webportal..app.com\",\r\n    databaseURL: \"https://rootlab-webportal-default-rtdb..io.com\",\r\n    projectId: \"rootlab-webportal\",\r\n    storageBucket: \"rootlab-webportal.appspot.com\",\r\n    messagingSenderId: \"693832568080\",\r\n    appId: \"1:693832568080:web:e62f5cb91585ae3a0a6995\",\r\n    measurementId: \"G-4WK99PW9K6\"\r\n};  \r\n\r\n..initializeApp(.Config);\r\n..analytics();\r\n\r\nexport default .;\r\n","import { useState, useEffect } from 'react';\r\nimport { Grid, Paper } from '@material-ui/core';\r\nimport \"./Home.css\";\r\n\r\nimport . from \"../../.\";\r\n\r\nimport classes from '../UI/InventoryCard.module.css';\r\n\r\nconst Home = () => {\r\n\r\n    const [fetchedData, setFetchedData] = useState([]);\r\n    const [fetchedPopularity, setFetchedPopularity] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const db = ..database().ref('Orders/')\r\n        db.on(\"value\", (response) => {\r\n            const data = response.val();\r\n            setFetchedData(data);\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const db = ..database().ref('Orders/Popularity')\r\n        db.on(\"value\", (response) => {\r\n            const data = response.val();\r\n            let list = [];\r\n            for (const key in data) {\r\n                list.push({\r\n                    id: key,\r\n                    name: data[key].Name,\r\n                    value: data[key].Value\r\n                })\r\n            }\r\n            setFetchedPopularity(list);\r\n        });\r\n    }, []);\r\n\r\n    fetchedPopularity.sort((a, b) => b.value - a.value);\r\n\r\n    var mostOrdered = fetchedPopularity.map(item => item.name);\r\n\r\n    // ########### OUT OF STOCK\r\n\r\n    const [invOut, setInvOut] = useState([]);\r\n    useEffect(() => {\r\n        const db1 = ..database().ref(\"Inventory/Outstock\");\r\n        db1.on(\"value\", (response) => {\r\n            const data = response.val();\r\n            let invItem_out = []\r\n            for (const key in data) {\r\n                invItem_out.push({\r\n                    id: key,\r\n                    price: data[key].Price,\r\n                    instock: data[key].Instock,\r\n                    description: data[key].Description,\r\n                    name: data[key].Name,\r\n                });\r\n            }\r\n            setInvOut(invItem_out);\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <Grid container spacing={6}>\r\n            <Grid item sm={12} md={7}>\r\n                <h2 className=\"home_heading\">Hi Name Surname</h2>\r\n                <p className=\"home_text_alt\">Welcome back</p>\r\n\r\n                <p className=\"home_text\">Add customer</p>\r\n\r\n                <Paper elevation={2} className=\"paper_1\">\r\n\r\n                </Paper>\r\n\r\n                <p className=\"home_text\">Statistics</p>\r\n                <Grid container spacing={2}>\r\n                    <Grid item sm={4}>\r\n                        <div className=\"orders_1\">\r\n                            <h1>{fetchedData.TotalOrders}</h1>\r\n                            <p>Total Orders</p>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item sm={4}>\r\n                        <div className=\"orders_2\">\r\n                            <h1>{mostOrdered[0]}</h1>\r\n                            <p>Most Ordered</p>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item sm={4}>\r\n                        <div className=\"orders_3\">\r\n                            <h1>{fetchedData.Revenue}</h1>\r\n                            <p>Total Revenue</p>\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item sm={12} md={5}>\r\n                <p className=\"home_text\">Out Of Stock</p>\r\n                <Grid container spacing={2} className=\"paper_2\">\r\n\r\n                    {\r\n                        invOut.map(item => {\r\n                            return (\r\n                                <Grid item sm={12} key={item.id}>\r\n                                    <div className={classes.invent_item} style={{ background: \"#FFE5E5\" }}>\r\n                                        <p className={classes.typedish}>{item.name} <span className={classes.cost} >&#36;{item.price}</span></p>\r\n                                        <p>{item.description}</p>\r\n                                        <br></br>\r\n                                        <p style={{ color: \"#FF0000\", fontSize: \"14px\" }}>OUT OF STOCK</p>\r\n                                    </div>\r\n                                </Grid>\r\n                            )\r\n                        })\r\n                    }\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from \"react\";\r\nimport { Grid, Paper } from '@material-ui/core';\r\n\r\nimport classes from './OrderCards.module.css';\r\n\r\nconst PendingOrdersCard = (props) => {\r\n\r\n    const item_list = [];\r\n    for (const key in props.orderDetails) {\r\n\r\n        item_list.push({\r\n            id: key,\r\n            orderName: props.orderDetails[key].OrderName,\r\n            orderQty: props.orderDetails[key].OrderQty,\r\n            price: props.orderDetails[key].Price\r\n        })\r\n    }\r\n    const OrderDetails_list = item_list.map(item => {\r\n        if (item.price === 0) {\r\n            return (<p style={{ color: \"#18CC67\" }} key={item.id}>{item.orderQty} X - {item.orderName}</p>)\r\n        }\r\n        else {\r\n            return (<p key={item.id}>{item.orderQty} X - {item.orderName}</p>)\r\n        }\r\n    });\r\n\r\n    return (\r\n        <Grid item xs={4}>\r\n            <Paper elevation={0} className={classes.order_details}>\r\n                <div className={classes.order_section}>\r\n                    <p>{props.name}</p>\r\n\r\n                </div>\r\n\r\n                <div className={classes.order_section}>\r\n                    <p><span>Order ID</span> - {props.orderID}</p>\r\n                    <p><span>Email</span> - {props.email}</p>\r\n                    <p><span >Country</span> - {props.country}</p>\r\n                    <p><span >Address</span> - {props.address}</p>\r\n                    <p><span >Total Cost</span> - {props.totalCost}</p>\r\n                </div>\r\n\r\n                {OrderDetails_list}\r\n            </Paper>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default PendingOrdersCard;","import { Grid } from '@material-ui/core';\r\n\r\nimport { useState, useEffect } from 'react';\r\n\r\nimport '../PendingOrders/PendingOrders.css';\r\n\r\nimport . from \"../../.\";\r\nimport PendingOrdersCard from '../UI/PendingOrdersCard';\r\nimport { TextField } from '@mui/material';\r\n\r\nconst PendingOrders = () => {\r\n    const [shipped, setShipped] = useState([]);\r\n    const [searchTerm, setSearchterm] = useState('');\r\n    useEffect(() => {\r\n        const db = ..database().ref(\"OrderStatus/Shipped\");\r\n        db.on(\"value\", (response) => {\r\n            const data = response.val();\r\n            let shippedItem = [];\r\n            for (const key in data) {\r\n                shippedItem.push({\r\n                    id: key,\r\n                    address: data[key].Address,\r\n                    country: data[key].Country,\r\n                    email: data[key].Email,\r\n                    name: data[key].Name,\r\n                    orderDetails: data[key].OrderDetails,\r\n                    totalCost: data[key].TotalCost,\r\n                    orderID: data[key].OrderID\r\n                });\r\n            }\r\n            setShipped(shippedItem);\r\n        });\r\n    }, []);\r\n\r\n    // const shipped_list = shipped.map(item => (\r\n    //     <PendingOrdersCard\r\n    //         key={item.id}\r\n    //         id={item.id}\r\n    //         address={item.address}\r\n    //         country={item.country}\r\n    //         email={item.email}\r\n    //         name={item.name}\r\n    //         orderDetails={item.orderDetails}\r\n    //         totalCost={item.totalCost}\r\n    //         orderID={item.orderID}\r\n    //     />\r\n    // ));\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Grid container>\r\n\r\n            {/* <Topbar /> */}\r\n            <h2>Customer's Orders</h2>\r\n            <TextField className=\"txtfld\"\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"name\"\r\n                label=\"Search\"\r\n                type=\"search\"\r\n                variant=\"standard\"\r\n                onChange={event => { setSearchterm(event.target.value) }}\r\n            />\r\n\r\n            <Grid container spacing={8}>\r\n\r\n                {\r\n                    shipped.filter(val => {\r\n                        if (searchTerm === \"\") {\r\n                            // console.log(val.address);\r\n                            return val;\r\n                        }else if (val.orderID.toLowerCase().includes(searchTerm.toLowerCase())) {\r\n                            return val;\r\n                        }\r\n                    }).map((val, key) => {\r\n                        return (\r\n                        <PendingOrdersCard\r\n                        key={val.id}\r\n                        id={val.id}\r\n                        address={val.address}\r\n                        country={val.country}\r\n                        email={val.email}\r\n                        name={val.name}\r\n                        orderDetails={val.orderDetails}\r\n                        totalCost={val.totalCost}\r\n                        orderID={val.orderID}\r\n                        />\r\n                        );\r\n                    })\r\n                }\r\n                {/* {shipped_list} */}\r\n            </Grid>\r\n        </Grid>\r\n\r\n    );\r\n}\r\n\r\nexport default PendingOrders;\r\n\r\n","import React from \"react\";\r\nimport { Grid } from '@material-ui/core';\r\n\r\nimport classes from './SummaryCounter.module.css';\r\n\r\nconst SummaryCounter = (props) => {\r\n    return (\r\n        <Grid container spacing={4}>\r\n            <Grid item xs={10}>\r\n                <Grid container className={classes.summary_name}>\r\n                    {/* <Paper elevation={2}></Paper> */}\r\n                    {/* <div className={classes.summ_card_col}></div> */}\r\n                    <p>{props.name}</p>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item xs={1}>\r\n                <div className={classes.summary_count}>\r\n                    <p>{props.value}</p>\r\n                </div>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default SummaryCounter;","import { useEffect, useState } from 'react';\r\nimport { Grid, Paper } from '@material-ui/core';\r\n\r\nimport './Statistics.css';\r\nimport SummaryCounter from '../UI/SummaryCounter';\r\n\r\nimport . from \"../../.\";\r\n\r\nconst Statistics = () => {\r\n    const [fetchedData, setFetchedData] = useState([]);\r\n    const [fetchedPopularity, setFetchedPopularity] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const db = ..database().ref('Orders/')\r\n        db.on(\"value\", (response) => {\r\n            const data = response.val();\r\n            setFetchedData(data);\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const db = ..database().ref('Orders/Popularity')\r\n        db.on(\"value\", (response) => {\r\n            const data = response.val();\r\n            let list = [];\r\n            for(const key in data){\r\n                list.push({\r\n                    id: key,\r\n                    name: data[key].Name,\r\n                    value: data[key].Value\r\n                })\r\n            }\r\n            setFetchedPopularity(list);\r\n        });\r\n    }, []);\r\n\r\n    const popList = fetchedPopularity.map(item => (\r\n        <SummaryCounter\r\n            key={item.id}\r\n            name={item.name}\r\n            value={item.value}\r\n        />\r\n    ));\r\n\r\n\r\n    fetchedPopularity.sort((a, b) => b.value - a.value);\r\n\r\n    var mostOrdered = fetchedPopularity.map(item => item.name);\r\n\r\n    // console.log(mostOrdered[0])\r\n    return (\r\n\r\n        <Grid container spacing={8}>\r\n\r\n            <Grid item sm={12} md={7} >\r\n                <h2 className=\"home_heading\">Hi Name Surname</h2>\r\n                <p className=\"home_text_alt\">Welcome back</p>\r\n\r\n                <p className=\"home_text\">Statistics</p>\r\n\r\n                <Grid container spacing={2}>\r\n                    <Grid item sm={4}>\r\n                        <div className=\"orders_1\">\r\n                            <h1>{fetchedData.TotalOrders}</h1>\r\n                            <p>Total Orders</p>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item sm={4}>\r\n                        <div className=\"orders_2\">\r\n                            <h1>{mostOrdered[0]}</h1>\r\n                            <p>Most Ordered</p>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item sm={4}>\r\n                        <div className=\"orders_3\">\r\n                            {/* <h1>{fetchedData}</h1> */}\r\n                            <h1>{fetchedData.Revenue}</h1>\r\n                            <p>Total Revenue</p>\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Paper elevation={3} className=\"graph\"></Paper>\r\n\r\n            </Grid>\r\n\r\n            <Grid item sm={12} md={4}>\r\n                <p className=\"home_text\" style={{ marginBottom: \"20px\" }}>Popularity</p>\r\n\r\n                {popList}\r\n\r\n            </Grid>\r\n\r\n        </Grid>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default Statistics;","import React from \"react\";\r\nimport { Grid, Paper } from '@material-ui/core';\r\n\r\nimport classes from './OrderCards.module.css';\r\n\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\nimport CancelIcon from '@mui/icons-material/Cancel';\r\n\r\nconst OrderCards1 = (props) => {\r\n\r\n    // console.log(item);\r\n    const item_list = [];\r\n    for (const key in props.orderDetails) {\r\n\r\n        item_list.push({\r\n            id: key,\r\n            orderName: props.orderDetails[key].OrderName,\r\n            orderQty: props.orderDetails[key].OrderQty,\r\n            price: props.orderDetails[key].Price\r\n        })\r\n    }\r\n    const OrderDetails_list = item_list.map(item => {\r\n\r\n\r\n        if (item.price === 0) {\r\n            return (<p style={{ color: \"#18CC67\" }} key={item.id}>{item.orderQty} X - {item.orderName}</p>)\r\n        }\r\n        else {\r\n            return (<p key={item.id}>{item.orderQty} X - {item.orderName}</p>)\r\n        }\r\n    });\r\n\r\n    const handleUpdateStatus = (data) => {\r\n        props.onUpdate(data);\r\n    };\r\n    const handleDeleteStatus = (data) => {\r\n        props.onDelete(data);\r\n    }\r\n    \r\n    return (\r\n        <Grid item xs={12}>\r\n            <Paper elevation={0} className={classes.order_details}>\r\n                <div className={classes.order_section}>\r\n                    <p>{props.name}</p>\r\n                    {/* <p>{props.orderID}</p> */}\r\n                    <div className={classes.action_icons}>\r\n                        <CheckCircleIcon style={{ fontSize: \"35px\", color: \"#18CC67\" }} onClick={() => { handleUpdateStatus(props) }} />\r\n                        <CancelIcon style={{ fontSize: \"35px\", color: \"#FF0000\", marginLeft: \"20px\" }} onClick={() => { handleDeleteStatus(props) }} />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={classes.order_section}>\r\n                    <p><span>Email</span> - {props.email}</p>\r\n                    <p><span >Country</span> - {props.country}</p>\r\n                    <p><span >Address</span> - {props.address}</p>\r\n                    <p><span >Total Cost</span> - {props.totalCost}</p>\r\n                </div>\r\n\r\n                {OrderDetails_list}\r\n            </Paper>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default OrderCards1;","import React from \"react\";\r\nimport { Grid, Paper } from '@material-ui/core';\r\n\r\nimport classes from './OrderCards.module.css';\r\n\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\nimport CancelIcon from '@mui/icons-material/Cancel';\r\n\r\nconst OrderCards2 = (props) => {\r\n\r\n    const item_list = [];\r\n    for (const key in props.orderDetails) {\r\n\r\n        item_list.push({\r\n            id: key,\r\n            orderName: props.orderDetails[key].OrderName,\r\n            orderQty: props.orderDetails[key].OrderQty,\r\n            price: props.orderDetails[key].Price\r\n        })\r\n    }\r\n    const OrderDetails_list = item_list.map(item => {\r\n        if (item.price === 0) {\r\n            return (<p style={{ color: \"#18CC67\" }} key={item.id}>{item.orderQty} X - {item.orderName}</p>)\r\n        }\r\n        else {\r\n            return (<p key={item.id}>{item.orderQty} X - {item.orderName}</p>)\r\n        }\r\n    });\r\n\r\n    const handleUpdateStatus = (data) => {\r\n        props.onUpdate(data);\r\n    };\r\n    const handleDeleteStatus = (data) => {\r\n        props.onDelete(data);\r\n    }\r\n\r\n    return (\r\n        <Grid item xs={12}>\r\n            <Paper elevation={0} className={classes.order_details}>\r\n                <div className={classes.order_section}>\r\n                    <p>{props.name}</p>\r\n                    {/* <p>{props.orderID}</p> */}\r\n                    <div className={classes.action_icons}>\r\n                        <CheckCircleIcon style={{ fontSize: \"35px\", color: \"#18CC67\" }} onClick={() => { handleUpdateStatus(props) }} />\r\n                        <CancelIcon style={{ fontSize: \"35px\", color: \"#FF0000\", marginLeft: \"20px\" }} onClick={() => { handleDeleteStatus(props) }} />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={classes.order_section}>\r\n                    <p><span>Email</span> - {props.email}</p>\r\n                    <p><span >Country</span> - {props.country}</p>\r\n                    <p><span >Address</span> - {props.address}</p>\r\n                    <p><span >Total Cost</span> - {props.totalCost}</p>\r\n                </div>\r\n\r\n                {OrderDetails_list}\r\n            </Paper>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default OrderCards2;","import React from \"react\";\r\nimport { Grid, Paper } from '@material-ui/core';\r\n\r\nimport classes from './OrderCards.module.css';\r\n\r\nimport CancelIcon from '@mui/icons-material/Cancel';\r\n\r\nconst OrderCards3 = (props) => {\r\n\r\n    const item_list = [];\r\n    for (const key in props.orderDetails) {\r\n\r\n        item_list.push({\r\n            id: key,\r\n            orderName: props.orderDetails[key].OrderName,\r\n            orderQty: props.orderDetails[key].OrderQty,\r\n            price: props.orderDetails[key].Price\r\n        })\r\n    }\r\n    const OrderDetails_list = item_list.map(item => {\r\n        if (item.price === 0) {\r\n            return (<p style={{ color: \"#18CC67\" }} key={item.id}>{item.orderQty} X - {item.orderName}</p>)\r\n        }\r\n        else {\r\n            return (<p key={item.id}>{item.orderQty} X - {item.orderName}</p>)\r\n        }\r\n    });\r\n    const handleDeleteStatus = (data) => {\r\n        props.onDelete(data);\r\n    }\r\n\r\n    return (\r\n        <Grid item xs={12}>\r\n            <Paper elevation={0} className={classes.order_details}>\r\n                <div className={classes.order_section}>\r\n                    <p>{props.name}</p>\r\n                    {/* <p>{props.orderID}</p> */}\r\n                    <div className={classes.action_icons}>\r\n                        {/* <CheckCircleIcon style={{ fontSize: \"35px\", color: \"#18CC67\" }} onClick={()=>{handleUpdateStatus(props)}} /> */}\r\n                        <CancelIcon style={{ fontSize: \"35px\", color: \"#FF0000\", marginLeft: \"20px\" }} onClick={() => { handleDeleteStatus(props) }} />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={classes.order_section}>\r\n                    <p><span>Email</span> - {props.email}</p>\r\n                    <p><span >Country</span> - {props.country}</p>\r\n                    <p><span >Address</span> - {props.address}</p>\r\n                    <p><span >Total Cost</span> - {props.totalCost}</p>\r\n                </div>\r\n\r\n                {OrderDetails_list}\r\n            </Paper>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default OrderCards3;","import { Grid } from '@material-ui/core';\r\nimport { useState, useEffect } from 'react';\r\nimport OrderCards1 from '../UI/OrderCards1';\r\nimport OrderCards2 from '../UI/OrderCards2';\r\nimport OrderCards3 from '../UI/OrderCards3';\r\n\r\nimport './CustomerBoard.css';\r\n\r\nimport . from \"../../.\";\r\n\r\nconst CustomerBoard = () => {\r\n\r\n    const [tBM, setTBM] = useState([]);\r\n    const [rOC, setROC] = useState([]);\r\n    const [shipped, setShipped] = useState([]);\r\n    const [orderData, setOrderData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const db = ..database().ref(\"OrderStatus/TBM\");\r\n        db.on(\"value\", (response) => {\r\n            const data = response.val();\r\n            let tbmItem = [];\r\n            for (const key in data) {\r\n                tbmItem.push({\r\n                    id: key,\r\n                    address: data[key].Address,\r\n                    country: data[key].Country,\r\n                    email: data[key].Email,\r\n                    name: data[key].Name,\r\n                    orderDetails: data[key].OrderDetails,\r\n                    totalCost: data[key].TotalCost,\r\n                    orderID: data[key].OrderID\r\n                });\r\n            }\r\n            console.log(tbmItem)\r\n            setTBM(tbmItem);\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const db = ..database().ref(\"OrderStatus/ROC\");\r\n        db.on(\"value\", (response) => {\r\n            const data = response.val();\r\n            let rocItem = [];\r\n            for (const key in data) {\r\n                rocItem.push({\r\n                    id: key,\r\n                    address: data[key].Address,\r\n                    country: data[key].Country,\r\n                    email: data[key].Email,\r\n                    name: data[key].Name,\r\n                    orderDetails: data[key].OrderDetails,\r\n                    totalCost: data[key].TotalCost,\r\n                    orderID: data[key].OrderID\r\n                });\r\n            }\r\n            console.log(rocItem)\r\n            setROC(rocItem);\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const db = ..database().ref(\"OrderStatus/Shipped\");\r\n        db.on(\"value\", (response) => {\r\n            const data = response.val();\r\n            let shippedItem = [];\r\n            for (const key in data) {\r\n                shippedItem.push({\r\n                    id: key,\r\n                    address: data[key].Address,\r\n                    country: data[key].Country,\r\n                    email: data[key].Email,\r\n                    name: data[key].Name,\r\n                    orderDetails: data[key].OrderDetails,\r\n                    totalCost: data[key].TotalCost,\r\n                    orderID: data[key].OrderID\r\n                });\r\n            }\r\n            console.log(shippedItem)\r\n            setShipped(shippedItem);\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const db_update = ..database().ref('/Orders');\r\n        db_update.on(\"value\", (response) => {\r\n            const data = response.val();\r\n            setOrderData(data);\r\n            // console.log(data)\r\n        })\r\n    }, []);\r\n\r\n    //  ######################## UPDATED STATUS\r\n\r\n    const updatedStatusHandler1 = (data) => {\r\n        const db = ..database().ref('/OrderStatus/ROC/').child(data.id);\r\n        // console.log(db);\r\n        db.set({\r\n            Id: data.id,\r\n            Address: data.address,\r\n            Country: data.country,\r\n            Email: data.email,\r\n            Name: data.name,\r\n            OrderDetails: data.orderDetails,\r\n            TotalCost: data.totalCost,\r\n            OrderID: data.orderID\r\n        });\r\n        const rem_db = ..database().ref('/OrderStatus/TBM/').child(data.id);\r\n        rem_db.remove();\r\n    };\r\n\r\n    const updatedStatusHandler2 = (data) => {\r\n\r\n        // setOpenModal(true);\r\n        // console.log(data.orderDetails);\r\n        var overlay = window.confirm(\"Is Payement Confirmed?\");\r\n\r\n        if (overlay === true) {\r\n\r\n            const db = ..database().ref('/OrderStatus/Shipped/').child(data.id);\r\n            // console.log(db);\r\n            db.set({\r\n                Id: data.id,\r\n                Address: data.address,\r\n                Country: data.country,\r\n                Email: data.email,\r\n                Name: data.name,\r\n                OrderDetails: data.orderDetails,\r\n                TotalCost: data.totalCost,\r\n                OrderID: data.orderID\r\n            });\r\n\r\n            const db_update = ..database().ref('/Orders');\r\n            db_update.set({\r\n                Revenue: parseInt(orderData.Revenue) + parseInt(data.totalCost),\r\n                TotalOrders: orderData.TotalOrders + 1,\r\n                Popularity: orderData.Popularity\r\n            })\r\n\r\n\r\n            ////////////////// POPULARITY\r\n\r\n            var db_pop = ..database().ref('Orders/Popularity/');\r\n            // console.log(data.orderDetails)\r\n            const orderList = data.orderDetails;\r\n            // console.log(orderList);\r\n\r\n            for (const key in orderList) {\r\n                // console.log(orderList[key])\r\n                // console.log(orderList[key].OrderName)\r\n                db_pop.once(\"value\", snap => {\r\n                    // console.log(snap.val())\r\n                    for (const i in snap.val()) {\r\n                        // console.log(snap.val()[i])\r\n                        // console.log(snap.val()[i].Name)\r\n                        if (snap.val()[i].Name === orderList[key].OrderName) {\r\n                            // console.log(\"found it  \" + snap.val()[i].Name)\r\n\r\n\r\n                            let updatedValue = snap.val()[i].Value + orderList[key].OrderQty;\r\n                            // console.log(updatedValue);\r\n\r\n                            const db_update = ..database().ref('Orders/Popularity/' + orderList[key].OrderName);\r\n                            db_update.set({\r\n                                Name: snap.val()[i].Name,\r\n                                Value: updatedValue,\r\n                            })\r\n                            return;\r\n                        }\r\n                        else {\r\n                            // console.log(\"not found\")\r\n                            const db_update = ..database().ref('Orders/Popularity/' + orderList[key].OrderName);\r\n                            db_update.set({\r\n                                Name: orderList[key].OrderName,\r\n                                Value: orderList[key].OrderQty\r\n                            })\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n\r\n            const rem_db = ..database().ref('/OrderStatus/ROC/').child(data.id);\r\n            rem_db.remove();\r\n        }\r\n        else {\r\n            console.log(\"Nothing!\");\r\n        }\r\n    }\r\n\r\n    // ################################# DELETED STATUS \r\n\r\n    const updatedDeleteHandler1 = data => {\r\n        const db = ..database().ref('/OrderStatus/TBM/').child(data.id);\r\n        db.remove();\r\n    };\r\n    const updatedDeleteHandler2 = data => {\r\n        const db = ..database().ref('/OrderStatus/TBM/').child(data.id);\r\n        db.set({\r\n            Id: data.id,\r\n            Address: data.address,\r\n            Country: data.country,\r\n            Email: data.email,\r\n            Name: data.name,\r\n            OrderDetails: data.orderDetails,\r\n            TotalCost: data.totalCost,\r\n            OrderID: data.orderID\r\n        });\r\n        const rem_db = ..database().ref('/OrderStatus/ROC/').child(data.id);\r\n        rem_db.remove();\r\n    };\r\n    const updatedDeleteHandler3 = data => {\r\n        const db = ..database().ref('/OrderStatus/ROC/').child(data.id);\r\n        db.set({\r\n            Id: data.id,\r\n            Address: data.address,\r\n            Country: data.country,\r\n            Email: data.email,\r\n            Name: data.name,\r\n            OrderDetails: data.orderDetails,\r\n            TotalCost: data.totalCost,\r\n            OrderID: data.orderID\r\n        });\r\n\r\n        const db_update = ..database().ref('/Orders');\r\n        db_update.set({\r\n            Revenue: parseInt(orderData.Revenue) - parseInt(data.totalCost),\r\n            TotalOrders: orderData.TotalOrders - 1,\r\n            Popularity: orderData.Popularity\r\n        })\r\n\r\n        var db_pop = ..database().ref('Orders/Popularity/');\r\n        // console.log(data.orderDetails)\r\n        const orderList = data.orderDetails;\r\n        // console.log(orderList);\r\n\r\n        for (const key in orderList) {\r\n            // console.log(orderList[key])\r\n            // console.log(orderList[key].OrderName)\r\n            db_pop.once(\"value\", snap => {\r\n                // console.log(snap.val())\r\n                for (const i in snap.val()) {\r\n                    // console.log(snap.val()[i])\r\n                    // console.log(snap.val()[i].Name)\r\n                    if (snap.val()[i].Name === orderList[key].OrderName) {\r\n                        // console.log(\"found it  \" + snap.val()[i].Name)\r\n\r\n\r\n                        let updatedValue = snap.val()[i].Value - orderList[key].OrderQty;\r\n                        // console.log(updatedValue);\r\n\r\n                        const db_update = ..database().ref('Orders/Popularity/' + orderList[key].OrderName);\r\n                        db_update.set({\r\n                            Name: snap.val()[i].Name,\r\n                            Value: updatedValue,\r\n                        })\r\n                        return;\r\n                    }\r\n                }\r\n            })\r\n        }\r\n\r\n        const rem_db = ..database().ref('/OrderStatus/Shipped/').child(data.id);\r\n        rem_db.remove();\r\n    };\r\n\r\n    const tbm_list = tBM.map(item => (\r\n        <OrderCards1\r\n            key={item.id}\r\n            id={item.id}\r\n            address={item.address}\r\n            country={item.country}\r\n            email={item.email}\r\n            name={item.name}\r\n            orderDetails={item.orderDetails}\r\n            totalCost={item.totalCost}\r\n            orderID={item.orderID}\r\n            onUpdate={updatedStatusHandler1}\r\n            onDelete={updatedDeleteHandler1}\r\n        />\r\n    ));\r\n\r\n    const roc_list = rOC.map(item => (\r\n        <OrderCards2\r\n            key={item.id}\r\n            id={item.id}\r\n            address={item.address}\r\n            country={item.country}\r\n            email={item.email}\r\n            name={item.name}\r\n            orderDetails={item.orderDetails}\r\n            totalCost={item.totalCost}\r\n            orderID={item.orderID}\r\n            onUpdate={updatedStatusHandler2}\r\n            onDelete={updatedDeleteHandler2}\r\n        />\r\n    ));\r\n\r\n    const shipped_list = shipped.map(item => (\r\n        <OrderCards3\r\n            key={item.id}\r\n            id={item.id}\r\n            address={item.address}\r\n            country={item.country}\r\n            email={item.email}\r\n            name={item.name}\r\n            orderDetails={item.orderDetails}\r\n            totalCost={item.totalCost}\r\n            orderID={item.orderID}\r\n            onDelete={updatedDeleteHandler3}\r\n        />\r\n    ));\r\n\r\n\r\n    return (\r\n        <Grid container>\r\n            {/* {openModal && <Modal closeModal={setOpenModal}/>} */}\r\n            {/* <Topbar /> */}\r\n            <Grid container spacing={8}>\r\n                <Grid item sm={12}>\r\n                    {/* <h2 className=\"home_heading\">Hi Name Surname</h2> */}\r\n                    {/* <p className=\"home_text_alt\">Welcome back</p> */}\r\n\r\n                    <h1 className=\"home_text_alt\">Customers</h1>\r\n\r\n                </Grid>\r\n\r\n                <Grid item sm={12} md={4} >\r\n                    <div className=\"customer_card\" style={{ background: \"#806EFF\" }}>\r\n                        <p>To be made</p>\r\n                    </div>\r\n\r\n                    <Grid container className=\"individual_section\">\r\n                        {tbm_list}\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Grid item sm={12} md={4}>\r\n                    <div className=\"customer_card\" style={{ background: \"#FF6EEC\" }}>\r\n                        <p>Ready for contact</p>\r\n                    </div>\r\n\r\n                    <Grid container className=\"individual_section\">\r\n                        {roc_list}\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Grid item sm={12} md={4}>\r\n                    <div className=\"customer_card\" style={{ background: \"#20F87E\" }}>\r\n                        <p>Shipped</p>\r\n                    </div>\r\n                    <Grid container className=\"individual_section\">\r\n                        {shipped_list}\r\n                    </Grid>\r\n\r\n                </Grid>\r\n\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default CustomerBoard;","import { TextField } from '@material-ui/core';\r\nimport React, { useState } from 'react'\r\n\r\nexport default function CartDisplayTextField(props) {\r\n    const { updatedValue } = props;\r\n\r\n    const [updatedPrice, setUpdatedPrice] = useState(props.value.price);\r\n    // console.log(props.value)\r\n    // const uPriceRef = useRef();\r\n\r\n    // const updatePriceHandler = () => {\r\n    //     setUpdatedPrice(prevPrice => {\r\n    //         if (prevPrice !== uPriceRef.current.value)\r\n    //             return uPriceRef.current.value;\r\n    //         else\r\n    //             return prevPrice;\r\n    //     });\r\n    //     updatedValue(uPriceRef.current.value);\r\n    //     // console.log(uPriceRef.current.value)\r\n    //     console.log(updatedPrice)\r\n    // }\r\n\r\n    const updatePriceHandler = (a) => {\r\n        console.log(a)\r\n        setUpdatedPrice(a);\r\n        const newVal = {\r\n            id: props.value.id,\r\n            name: props.value.name,\r\n            price: a,\r\n            description: props.value.description,\r\n            qty: props.value.qty\r\n        }\r\n        updatedValue(newVal);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/* <p>$ {priceChange}</p>         */}\r\n\r\n            <TextField defaultValue={updatedPrice} onChange={a => updatePriceHandler(a.target.value)} variant=\"standard\"></TextField>\r\n\r\n            {/* <input defaultValue={updatedPrice} ref={uPriceRef}></input> */}\r\n            {/* <button onClick={updatePriceHandler}>OK</button> */}\r\n        </div>\r\n    )\r\n}\r\n","import {  Divider,  Grid,  } from '@material-ui/core';\r\n// import { useState, useRef } from 'react'\r\n\r\nimport classes from './CartDisplay.module.css';\r\n// import EditIcon from '@mui/icons-material/Edit';\r\nimport CartDisplayTextField from './CartDisplayTextField';\r\n\r\nexport default function CartDisplay(props) {\r\n    const { cartItems, onAddHandler, onRemoveHandler, changeCostHandler, updatedValue } = props;\r\n    // const priceRef = useRef();\r\n    // const priceChangeHandler = (data) =>{\r\n    //     setPriceChange(data);\r\n    // }\r\n    const itemsPrice = cartItems.reduce((a, c) => a + c.price * c.qty, 0);\r\n    if (itemsPrice > 0) {\r\n        changeCostHandler(itemsPrice.toFixed(2));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Cart Items</h2>\r\n            <Divider />\r\n            <div>{cartItems.length === 0 && <p>Cart is empty</p>}</div>\r\n            {cartItems.map(item => (\r\n                <div key={item.id}>\r\n                    <Grid container sm={12} spacing={1} direction=\"row\">\r\n                        <Grid item sm={6}>\r\n                            <p>{item.name}</p>\r\n                        </Grid>\r\n\r\n                        <Grid item sm={1}>\r\n                            <button variant=\"contained\" className={classes.inc_btn} onClick={() => onRemoveHandler(item)}>-</button>\r\n                        </Grid>\r\n\r\n                        <Grid item sm={1}>\r\n                            <button variant=\"contained\" className={classes.inc_btn} onClick={() => onAddHandler(item)}>+</button>\r\n                        </Grid>\r\n\r\n                        <Grid item sm={1}>\r\n                            <p>{item.qty}</p>\r\n                        </Grid>\r\n\r\n                        <Grid item sm={3}>\r\n                            {/* <p>$ {item.price.toFixed(2)} <span><EditIcon></EditIcon></span></p> */}\r\n                            {/* <FormControl fullWidth variant=\"standard\">\r\n                                <TextField value={updateState(item.price.toFixed(2))}   onChange={e => setUpdatedPrice(e.target.value)} variant=\"standard\"></TextField>\r\n                            </FormControl> */}\r\n                            <CartDisplayTextField value={item} updatedValue={updatedValue}/>\r\n                            {/* <CartDisplayTextField value={item.price.toFixed(2)} updatedValue={updatedValue}/> */}\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            ))}\r\n            {itemsPrice.length !== 0 && (\r\n                <Grid container item direction=\"row\">\r\n                    <Grid item xs={9}>Total Price:</Grid>\r\n                    <Grid item xs={3}>$ {itemsPrice.toFixed(2)}</Grid>\r\n                </Grid>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\n\r\n\r\nimport './Popup.css';\r\nimport CartDisplay from './Cart/CartDisplay';\r\nimport . from \"../../.\";\r\n// import CartItems from './Cart/CartItems';\r\n\r\nexport default function Popup(props) {\r\n\r\n  const { setItemList, changeCostHandler } = props;\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [products, setProducts] = useState([]);\r\n  const [cartItems, setCartItems] = useState([]);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setItemList(cartItems);\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    const db = ..database().ref(\"Inventory/Instock\");\r\n    db.on(\"value\", (response) => {\r\n      const data = response.val();\r\n      let productList = [];\r\n      for (const key in data) {\r\n        productList.push({\r\n          id: data[key].Id,\r\n          name: data[key].Name,\r\n          price: data[key].Price,\r\n          description: data[key].Description\r\n        });\r\n      }\r\n      setProducts(productList);\r\n    })\r\n  }, []);\r\n\r\n  const onAddHandler = (product) => {\r\n    const exist = cartItems.find(item => item.id === product.id);\r\n    if (exist) {\r\n      setCartItems(\r\n        cartItems.map(item =>\r\n          item.id === product.id ? { ...exist, qty: exist.qty + 1 } : item\r\n        )\r\n      );\r\n    }\r\n    else {\r\n      setCartItems([...cartItems, { ...product, qty: 1 }]);\r\n    }\r\n  }\r\n\r\n  const onRemoveHandler = (product) => {\r\n    const exist = cartItems.find(item => item.id === product.id);\r\n    if (exist.qty === 1) {\r\n      setCartItems(cartItems.filter((x) => x.id !== product.id))\r\n    }\r\n    else {\r\n      setCartItems(\r\n        cartItems.map(item =>\r\n          item.id === product.id ? { ...exist, qty: exist.qty - 1 } : item\r\n        )\r\n      );\r\n    }\r\n  }\r\n\r\n  const onGiftHandler = (product) => {\r\n    const exist = cartItems.find(item => item.id === product.id);\r\n    if (exist) {\r\n      setCartItems(\r\n        cartItems.map(item =>\r\n          item.id === product.id ? { ...exist, qty: exist.qty + 1, price: 0 } : item\r\n        )\r\n      );\r\n    }\r\n    else {\r\n      setCartItems([...cartItems, { ...product, qty: 1, price: 0 }]);\r\n    }\r\n  }\r\n\r\n  const updatedValue = (data) => {\r\n    // console.log(data);\r\n    const updatedList = cartItems.find((x) => x.id === data.id);\r\n    // console.log(\"gandu\"+updatedList.price+\" ruko zara : \" + data.price)\r\n    setCartItems(cartItems.map(item =>\r\n      item.id === data.id ? { ...updatedList, price: data.price } : item\r\n    ))\r\n\r\n  }\r\n\r\n  //Search\r\n\r\n  const [searchTerm, setSearchterm] = useState('');\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"contained\" onClick={handleClickOpen}>+ Add/Remove</Button>\r\n      <Dialog open={open} onClose={handleClose} maxWidth=\"xl\" fullWidth style={{ color: \"#DFDFDF\" }}>\r\n\r\n        {/* <Grid container sm={12} md={8}> */}\r\n\r\n\r\n        <DialogTitle style={{ background: \"#DFDFDF\" }}>\r\n          <TextField className=\"txtfld\"\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Search\"\r\n            type=\"search\"\r\n            variant=\"standard\"\r\n            onChange={event => { setSearchterm(event.target.value) }}\r\n          />\r\n        </DialogTitle>\r\n\r\n        <DialogContent style={{ background: \"#DFDFDF\", height: \"60vh\" }}>\r\n\r\n          <Grid container spacing={5}>\r\n\r\n            <Grid item container sm={12} md={9} spacing={3} >\r\n\r\n              {/* <CartItems products={products} onAddHandler={onAddHandler} onGiftHandler={onGiftHandler} /> */}\r\n              {\r\n                products.filter(val => {\r\n                  if (searchTerm === \"\") {\r\n                    return val;\r\n                  } else if (val.name.toLowerCase().includes(searchTerm.toLowerCase())) {\r\n                    return val;\r\n                  }\r\n                }).map((val, key) => {\r\n                  return (\r\n                    // <h3>Searched Items</h3>\r\n                    <Grid item sm={4} key={val.id}>\r\n\r\n                      <div className=\"inventory-item\" style={{ background: \"#FFFFFF\" }}>\r\n                        <p className=\"typedish\">{val.name}<span className=\"cost\">&#36;{val.price}</span></p>\r\n                        <p>{val.description}</p>\r\n\r\n                        <Grid container spacing={1}>\r\n                          <Grid item xs={6}>\r\n                            <Button variant=\"contained\" onClick={() => onGiftHandler(val)}>Add as Gift</Button>\r\n                          </Grid>\r\n                          <Grid item xs={6}>\r\n                            <Button variant=\"contained\" onClick={() => onAddHandler(val)}>Add to Cart</Button>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </div>\r\n\r\n                    </Grid>\r\n                  )\r\n                })\r\n              }\r\n\r\n            </Grid>\r\n\r\n            <Grid item container sm={12} md={3} className=\"cart_grid\">\r\n\r\n              <CartDisplay cartItems={cartItems} onAddHandler={onAddHandler} onRemoveHandler={onRemoveHandler} changeCostHandler={changeCostHandler} updatedValue={updatedValue} />\r\n\r\n            </Grid>\r\n\r\n          </Grid>\r\n        </DialogContent>\r\n\r\n        <DialogActions style={{ background: \"#DFDFDF \" }}>\r\n          <Button onClick={handleClose} style={{ border: \"2px solid black\", background: \"#DFDFDF\", color: \"#191919\", padding: \"0.40em 4em\", margin: \"2em 2em 2em 0\" }}>CANCEL</Button>\r\n          <Button onClick={handleClose} className=\"Confirmbut\" style={{ background: \"#191919\", color: \"#ffffff\", padding: \"0.5em 3em\", margin: \"2em 2em 2em 0\" }}>CONFIRM</Button>\r\n        </DialogActions>\r\n\r\n      </Dialog>\r\n    </div >\r\n  );\r\n}\r\n\r\n","import { useRef, useState } from 'react';\r\nimport { Button, Select, InputLabel, MenuItem, FormControl, Grid, TextField, Divider } from \"@material-ui/core\";\r\nimport { Alert } from '@mui/material';\r\n\r\nimport { useHistory } from 'react-router';\r\nimport classes from './AddCustomerForm.module.css';\r\n\r\nimport Popup from '../UI/Popup';\r\nimport . from \"../../.\";\r\n\r\nconst isEmpty = value => value.trim() === '';\r\nconst isSelected = value => value === 'none' || value === '';\r\n\r\nconst AddCustomerForm = () => {\r\n\r\n    const [commMode, setCommMode] = useState('');\r\n    const [paymentMethod, setPaymentMethod] = useState('');\r\n    const [totalCost, setTotalCost] = useState([]);\r\n    const [itemList, setItemList] = useState([]);\r\n    const [finalItemList, setFinalItemList] = useState([]);\r\n\r\n    const history = useHistory();\r\n\r\n    const handleCommunicationChange = (event) => {\r\n        setCommMode(event.target.value);\r\n        console.log(event.target.value);\r\n    };\r\n    const handlePaymentChange = (event) => {\r\n        setPaymentMethod(event.target.value);\r\n        console.log(event.target.value);\r\n    };\r\n\r\n    const changeCostHandler = data => {\r\n        setTotalCost(data);\r\n    }\r\n\r\n    const cartItemList = (items) => {\r\n        for (const key in items) {\r\n            console.log(key + \" \" + items[key].name)\r\n            finalItemList.push({\r\n                // OrderName: items[key].name,\r\n                OrderName: items[key].name,\r\n                OrderQty: items[key].qty,\r\n                Price: items[key].price\r\n            })\r\n        }\r\n        // console.log(finalItemList);\r\n        setFinalItemList(finalItemList);\r\n        setItemList(items);\r\n\r\n    }\r\n    console.log(itemList);\r\n\r\n    const nameRef = useRef();\r\n    const countryRef = useRef();\r\n    const addressRef = useRef();\r\n    const idRef = useRef();\r\n    const walletRef = useRef();\r\n    const orderRef = useRef();\r\n    const discountRef = useRef();\r\n    const customerRef = useRef();\r\n\r\n    const [formInputValidity, setFormInputValidity] = useState({\r\n        name: true,\r\n        country: true,\r\n        address: true,\r\n        id: true,\r\n        wallet: true,\r\n        order: true,\r\n        itemList: true,\r\n        comm: true,\r\n        payment: true,\r\n        discount: true,\r\n        customer: true,\r\n    })\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const enteredName = nameRef.current.value;\r\n        const enteredCountry = countryRef.current.value;\r\n        const enteredAddress = addressRef.current.value;\r\n        const enteredId = idRef.current.value;\r\n        const enteredWallet = walletRef.current.value;\r\n        const enteredOrder = orderRef.current.value;\r\n        const enteredDiscount = discountRef.current.value;\r\n        const enteredCustomer = customerRef.current.value;\r\n        const enteredItemList = itemList;\r\n\r\n        const enteredNameIsValid = !isEmpty(enteredName);\r\n        const enteredCountryIsValid = !isEmpty(enteredCountry);\r\n        const enteredAddressIsValid = !isEmpty(enteredAddress);\r\n        const enteredIdIsValid = !isEmpty(enteredId);\r\n        const enteredWalletIsValid = !isEmpty(enteredWallet);\r\n        const enteredOrderIsValid = !isEmpty(enteredOrder);\r\n        const enteredDiscountIsValid = !isEmpty(enteredDiscount);\r\n        const enteredCustomerIsValid = !isEmpty(enteredCustomer);\r\n        const enteredCommIsValid = !isSelected(commMode);\r\n        const enteredPaymentMethodIsValid = !isSelected(paymentMethod);\r\n        const enteredItemListIsValid = enteredItemList.length !== 0;\r\n\r\n        setFormInputValidity({\r\n            name: enteredNameIsValid,\r\n            country: enteredCountryIsValid,\r\n            address: enteredAddressIsValid,\r\n            id: enteredIdIsValid,\r\n            wallet: enteredWalletIsValid,\r\n            order: enteredOrderIsValid,\r\n            itemList: enteredItemListIsValid,\r\n            comm: enteredCommIsValid,\r\n            payment: enteredPaymentMethodIsValid,\r\n            discount: enteredDiscountIsValid,\r\n            customer: enteredCustomerIsValid,\r\n        })\r\n\r\n        const formIsValid = enteredNameIsValid && enteredCountryIsValid && enteredAddressIsValid && enteredIdIsValid && enteredWalletIsValid && enteredOrderIsValid && enteredDiscountIsValid && enteredCustomerIsValid && enteredCommIsValid && enteredPaymentMethodIsValid && enteredItemListIsValid;\r\n\r\n        if (!formIsValid) {\r\n            return;\r\n        }\r\n\r\n        //submit cart data;\r\n        const db = ..database().ref('/OrderStatus/TBM/');\r\n        db.push({\r\n            // Id: data.id,\r\n            Name: enteredName,\r\n            Country: enteredCountry,\r\n            Address: enteredAddress,\r\n            CommMode: commMode,\r\n            Email: enteredId,\r\n            Payment: paymentMethod,\r\n            Wallet: enteredWallet,\r\n            OrderNotes: enteredOrder,\r\n            Discount: enteredDiscount,\r\n            CusotomerNotes: enteredCustomer,\r\n            OrderDetails: finalItemList,\r\n            TotalCost: totalCost,\r\n            OrderID: enteredCountry + \"_\" + Date.now()\r\n        });\r\n\r\n        history.push('/CustomerBoard')\r\n\r\n    }\r\n\r\n    // console.log(totalCost)\r\n\r\n    return (\r\n        <Grid container style={{ marginTop: \"10px\" }}>\r\n\r\n            <h2 className={classes.home_text_heading}>Customers</h2>\r\n\r\n\r\n            <form onSubmit={submitHandler}>\r\n                <Grid container className={classes.cus_form}>\r\n\r\n                    <Grid container xs={12} md={6} spacing={4}>\r\n\r\n                        <Grid item xs={12} md={6}>\r\n                            {formInputValidity.name ? (\r\n                                <TextField inputRef={nameRef} label=\"Name\" variant=\"standard\" fullWidth></TextField>\r\n                            ) :\r\n                                (\r\n                                    <TextField error inputRef={nameRef} label=\"Name\" variant=\"standard\" fullWidth></TextField>\r\n                                )}\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} md={6}>\r\n                            {formInputValidity.country ? (\r\n                                <TextField inputRef={countryRef} label=\"Country\" variant=\"standard\" fullWidth></TextField>\r\n                            ) :\r\n                                (\r\n                                    <TextField error inputRef={countryRef} label=\"Country\" variant=\"standard\" fullWidth></TextField>\r\n                                )}\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            {formInputValidity.address ? (\r\n                                <TextField fullWidth label=\"Address\" variant=\"standard\" inputRef={addressRef}></TextField>\r\n                            ) :\r\n                                (\r\n                                    <TextField error fullWidth label=\"Address\" variant=\"standard\" inputRef={addressRef}></TextField>\r\n                                )}\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} md={6}>\r\n                            <FormControl fullWidth variant=\"standard\">\r\n                                {formInputValidity.comm ? (\r\n                                    <InputLabel fullWidth id=\"demo-simple-select-standard-label\">Communication Mode</InputLabel>\r\n                                ) :\r\n                                    (\r\n                                        <InputLabel error fullWidth id=\"demo-simple-select-standard-label\">Communication Mode</InputLabel>\r\n                                    )}\r\n                                <Select labelId=\"demo-simple-select-standard-label\" id=\"demo-simple-select-standard\" value={commMode} onChange={handleCommunicationChange} fullWidth label=\"Communication Mode\">\r\n                                    <MenuItem value=\"none\"><em>None</em></MenuItem>\r\n                                    <MenuItem value={\"email\"}>E-Mail</MenuItem>\r\n                                    <MenuItem value={\"reddit\"}>Reddit</MenuItem>\r\n                                    <MenuItem value={\"telegram\"}>Telegram</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} md={6}>\r\n                            {formInputValidity.id ? (\r\n                                <TextField label=\"ID\" variant=\"standard\" inputRef={idRef} fullWidth></TextField>\r\n                            ) :\r\n                                (\r\n                                    <TextField error label=\"ID\" variant=\"standard\" inputRef={idRef} fullWidth></TextField>\r\n                                )}\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <FormControl fullWidth variant=\"standard\">\r\n                                {formInputValidity.payment ? (\r\n                                    <InputLabel fullWidth id=\"demo-simple-select-standard-label\">Payment Method</InputLabel>\r\n                                ) :\r\n                                    (\r\n                                        <InputLabel error fullWidth id=\"demo-simple-select-standard-label\">Payment Method</InputLabel>\r\n                                    )}\r\n                                <Select labelId=\"demo-simple-select-standard-label\" id=\"demo-simple-select-standard\" value={paymentMethod} onChange={handlePaymentChange} fullWidth label=\"Payment Method\">\r\n                                    <MenuItem value=\"none\"><em>None</em></MenuItem>\r\n                                    <MenuItem value={\"paypal\"}>Paypal</MenuItem>\r\n                                    <MenuItem value={\"btc\"}>BTC</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            {formInputValidity.wallet ? (\r\n                                <TextField fullWidth label=\"Wallet Address\" variant=\"standard\" inputRef={walletRef}></TextField>\r\n                            ) :\r\n                                (\r\n                                    <TextField error fullWidth label=\"Wallet Address\" variant=\"standard\" inputRef={walletRef}></TextField>\r\n                                )}\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            {formInputValidity.order ? (\r\n                                <TextField id=\"standard-textarea\" label=\"Order Notes\" multiline variant=\"standard\" fullWidth inputRef={orderRef} />\r\n                            ) :\r\n                                (\r\n                                    <TextField error id=\"standard-textarea\" label=\"Order Notes\" multiline variant=\"standard\" fullWidth inputRef={orderRef} />\r\n                                )}\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n\r\n                    <Grid item xs={1}></Grid>\r\n\r\n                    <Grid container xs={12} md={5} spacing={1} className={classes.right_grid}>\r\n\r\n                        <Grid item xs={12}>\r\n                            <p>Order Details</p>\r\n                            <Divider />\r\n                            {itemList.length === 0 && <p>Cart is empty</p>}\r\n                            {itemList.map(item => (\r\n                                <div key={item.id}>\r\n                                    <Grid container sm={12} spacing={1} direction=\"row\">\r\n                                        <Grid item sm={2}>\r\n                                            <p>{item.qty} X </p>\r\n                                        </Grid>\r\n\r\n                                        <Grid item sm={7}>\r\n                                            <p>{item.name}</p>\r\n                                        </Grid>\r\n\r\n\r\n                                        <Grid item sm={3}>\r\n                                            <p>$ {item.price}</p>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </div>\r\n                            ))}\r\n\r\n                            {!formInputValidity.itemList && (<Alert variant=\"outlined\" severity=\"error\">\r\n                                Your cart is empty - Please enter items to proceed.\r\n                            </Alert>)}\r\n\r\n                            <br></br>\r\n\r\n                            <Popup setItemList={cartItemList} changeCostHandler={changeCostHandler} />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <br></br>\r\n                            <Grid container item direction=\"row\">\r\n                                <Grid item xs={9}>Total Price: </Grid>\r\n                                {totalCost.length !== 0 ? (\r\n                                    <Grid item xs={3}>$ {totalCost}</Grid>\r\n                                ) :\r\n                                    (\r\n                                        <Grid item xs={3}>$ 0</Grid>\r\n                                    )}\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            {formInputValidity.discount ? (\r\n                                <TextField label=\"Discount Offered\" variant=\"standard\" inputRef={discountRef} fullWidth></TextField>\r\n                            ) :\r\n                                (\r\n                                    <TextField error label=\"Discount Offered\" variant=\"standard\" inputRef={discountRef} fullWidth></TextField>\r\n                                )}\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} className={classes.hello}>\r\n                            {formInputValidity.customer ? (\r\n                                <TextField id=\"standard-textarea\" label=\"Customer Notes\" multiline variant=\"standard\" fullWidth inputRef={customerRef} />\r\n                            ) :\r\n                                (\r\n                                    <TextField error id=\"standard-textarea\" label=\"Customer Notes\" multiline variant=\"standard\" fullWidth inputRef={customerRef} />\r\n                                )}\r\n                        </Grid>\r\n\r\n                        {/* <Button variant=\"contained\" sx={{backgroundColor: '#191919', color: '#ffffff'}} className=\"\">SUBMIT</Button> */}\r\n                        <Button variant=\"contained\" type=\"submit\" className={classes.submit_btn} >SUBMIT</Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n            {/* </Grid> */}\r\n        </Grid >\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default AddCustomerForm;","import React, { useState } from 'react';\r\n\r\nconst AuthContext = React.createContext({\r\n    token: '',\r\n    isLoggedIn: false,\r\n    login: (token) => { },\r\n    logout: () => { }\r\n});\r\n\r\nexport const AuthContextProvider = (props) => {\r\n    const [token, setToken] = useState(null);\r\n    // const [loginState, setLoginState] = useState(null);\r\n\r\n    const userIsLoggedIn = !!token;\r\n    console.log(userIsLoggedIn);\r\n\r\n    const loginHandler = (token) => {\r\n        console.log(token)\r\n        setToken(token);\r\n        // setLoginState(true);\r\n    };\r\n\r\n    const logoutHandler = () => {\r\n        setToken(null);\r\n        // setLoginState(false);\r\n    };\r\n    \r\n    // const userIsLoggedIn = loginState;\r\n    const contextValue = {\r\n        token: token,\r\n        isLoggedIn: userIsLoggedIn,\r\n        login: loginHandler,\r\n        logout: logoutHandler\r\n    }\r\n\r\n    console.log(contextValue);\r\n\r\n    return (\r\n        <AuthContext.Provider value={contextValue}>\r\n            {props.children}\r\n        </AuthContext.Provider>\r\n    );\r\n}\r\n\r\nexport default AuthContext;\r\n","import { useContext } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport AuthContext from '../../Store/auth-context';\r\n// import Layout from '../Layout/Layout';\r\nimport \"./Sidebar.css\";\r\n// import Login from '../Login/Login';\r\n\r\nfunction Sidebar() {\r\n\r\n    const authCtx = useContext(AuthContext);\r\n    // const [isLoggedIn, setIsLoggedIn] = useState(authCtx.isLoggedIn)\r\n    const isLoggedIn = authCtx.isLoggedIn;\r\n    console.log(isLoggedIn);\r\n\r\n    const logoutHandler = () => {\r\n        authCtx.logout();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/* {\r\n                !isLoggedIn && (\r\n                    <div>\r\n                        <h2>hellog</h2>\r\n                    </div>\r\n                )\r\n            } */}\r\n            {isLoggedIn && (\r\n                <div className=\"sidebar\">\r\n                    <p>Rootlabs</p>\r\n                    <div className=\"links\">\r\n\r\n                        <NavLink to='/Home' activeClassName=\"active\">\r\n                            <h4>Home</h4>\r\n                        </NavLink>\r\n                        <NavLink to='/AddCustomerForm' activeClassName=\"active\">\r\n                            <h4>Add Customer/Order</h4>\r\n                        </NavLink>\r\n                        <NavLink to='/CustomerBoard' activeClassName=\"active\">\r\n                            <h4>Customer Board</h4>\r\n                        </NavLink>\r\n                        <NavLink to='/Inventory' activeClassName=\"active\">\r\n                            <h4>Inventory</h4>\r\n                        </NavLink>\r\n                        {/* <NavLink to='/AddInventory' activeClassName=\"active\">\r\n                    <h4>Add Inventory</h4>\r\n                </NavLink> */}\r\n                        <NavLink to='/CompletedOrders' activeClassName=\"active\">\r\n                            <h4>Completed Orders</h4>\r\n                        </NavLink>\r\n                        {/* <NavLink to='/Login' activeClassName='active'>\r\n                            <h4>Login</h4>\r\n                        </NavLink> */}\r\n                        <NavLink to='/Statistics' activeClassName=\"active\">\r\n                            <h4>Statistics</h4>\r\n                        </NavLink>\r\n\r\n                        <hr></hr>\r\n\r\n                        {/* <NavLink to='/'>\r\n                            <h4 onClick={logoutHandler}>Logout</h4>\r\n                        </NavLink> */}\r\n                        <button onClick={logoutHandler}>logout</button>\r\n                    </div>\r\n                </div>\r\n            )\r\n            }\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Sidebar;","import { Fragment } from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport SideBar from '../Utilities/Sidebar';\r\nimport classes from './Layout.module.css';\r\n\r\nconst Layout = (props) => {\r\n    return (\r\n        <Fragment>\r\n            <Grid container className={classes.layout}>\r\n                <Grid item sm={2}>\r\n                    <SideBar />\r\n                </Grid>\r\n                <Grid item sm={10}>\r\n                    <main className={classes.main}>{props.children}</main>\r\n                </Grid>\r\n            </Grid>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Layout;","import React from \"react\";\r\nimport { Grid } from '@material-ui/core';\r\n// import { dividerClasses } from '@mui/material';\r\n// import '../Inventory/Inventory.css';\r\nimport classes from './InventoryCard.module.css';\r\n\r\nconst InventoryCard = (props) => {\r\n\r\n    const { updatedStatusHandler } = props;\r\n\r\n    const handleChange = (data) => {\r\n        updatedStatusHandler(data);\r\n    };\r\n\r\n    return (\r\n        <Grid item sm={4}>\r\n            <div className={classes.invent_item} style={{ background: \"#FFFFFF\" }}>\r\n                <p className={classes.typedish}>{props.name} <span className={classes.cost} >&#36;{props.price}</span></p>\r\n                <p>{props.description}</p>\r\n                <Grid container>\r\n                    <Grid item xs={6}>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <button classes={classes.status_btn} onClick={() => handleChange(props)}>Change Status</button>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        </Grid>\r\n    );\r\n\r\n}\r\n\r\nexport default InventoryCard;","import React from \"react\";\r\nimport { Grid } from '@material-ui/core';\r\n// import { dividerClasses } from '@mui/material';\r\nimport classes from \"./InventoryCard.module.css\";\r\n\r\n\r\nconst InventoryCardUnchecked = (props) => {\r\n\r\n    const { uncheckedStatusHandler} = props;\r\n\r\n    const handleChange = (event) => {\r\n        uncheckedStatusHandler(event)\r\n    };\r\n\r\n    return (\r\n        <Grid item sm={4}>\r\n            <div className={classes.invent_item} style={{ background: \"#FFE5E5\" }}>\r\n                <p className={classes.typedish}>{props.name} <span className={classes.cost} >&#36;{props.price}  </span></p>\r\n                <p> {props.description} </p>\r\n                <Grid container>\r\n                    <Grid item xs={6}>\r\n                        <p style={{ color: \"#FF0000\", fontSize: \"14px\" }}>OUT OF STOCK</p>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <button classes={classes.status_btn} onClick={() => handleChange(props)}>Change Status</button>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default InventoryCardUnchecked;","import { Button, Dialog, DialogActions, DialogContent, DialogTitle, Divider, Grid, TextField } from '@material-ui/core';\r\nimport React, { useState, useRef } from 'react'\r\n\r\nimport . from \"../../.\";\r\n\r\nconst isEmpty = value => value.trim() === '';\r\n\r\nexport default function InventoryForm() {\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        setFormValidity({\r\n            name: true,\r\n            cost: true,\r\n            description: true\r\n        })\r\n        // setItemList(cartItems);\r\n    };\r\n\r\n    const nameRef = useRef();\r\n    const costRef = useRef();\r\n    const descriptionRef = useRef();\r\n\r\n    const [formValidity, setFormValidity] = useState({\r\n        name: true,\r\n        cost: true,\r\n        description: true\r\n    })\r\n\r\n    const submitHandler = (event) => {\r\n\r\n\r\n        const enteredName = nameRef.current.value;\r\n        const enteredCost = costRef.current.value;\r\n        const enteredDescription = descriptionRef.current.value;\r\n\r\n        const enteredNameIsValid = !isEmpty(enteredName);\r\n        const enteredCostIsValid = !isEmpty(enteredCost);\r\n        const enteredDescriptionIsValid = !isEmpty(enteredDescription);\r\n\r\n        setFormValidity({\r\n            name: enteredNameIsValid,\r\n            cost: enteredCostIsValid,\r\n            description: enteredDescriptionIsValid\r\n        })\r\n\r\n        const formIsValid = enteredNameIsValid && enteredCostIsValid && enteredDescriptionIsValid;\r\n\r\n        if (!formIsValid) {\r\n            return;\r\n        }\r\n\r\n        const db = ..database().ref('/Inventory/Instock').child(enteredName);\r\n        db.set({\r\n            Name: enteredName,\r\n            Price: enteredCost,\r\n            Description: enteredDescription,\r\n            Id: enteredName,\r\n            Instock: true\r\n        })\r\n\r\n        setOpen(false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button variant=\"contained\" onClick={handleClickOpen}>+ Add Items</Button>\r\n            <Dialog open={open} onClose={handleClose} maxWidth=\"md\" fullWidth style={{ color: \"#DFDFDF\", padding: \"30px 50px 30px 50px\" }}>\r\n\r\n                {/* <Grid container sm={12} md={8}> */}\r\n\r\n                <DialogTitle style={{ background: \"#DFDFDF\" }}>\r\n                    ADD ITEMS\r\n                    <Divider />\r\n                </DialogTitle>\r\n\r\n                <DialogContent style={{ background: \"#DFDFDF\" }}>\r\n\r\n                    <Grid container style={{ marginTop: \"0px\" }}>\r\n                        <Grid container sm={12} spacing={0} >\r\n\r\n                            <Grid container xs={12} spacing={4}>\r\n\r\n                                <Grid item xs={6}>\r\n                                    {formValidity.name ? (\r\n                                        <TextField inputRef={nameRef} fullWidth label=\"Name\" variant=\"standard\"></TextField>\r\n                                    ) :\r\n                                        (\r\n                                            <TextField error inputRef={nameRef} fullWidth label=\"Name\" variant=\"standard\"></TextField>\r\n                                        )}\r\n                                </Grid>\r\n\r\n                                <Grid item xs={6}>\r\n                                    {formValidity.cost ? (\r\n                                        <TextField inputRef={costRef} type=\"text\" inputMode=\"decimal\" fullWidth label=\"Total Cost\" variant=\"standard\"></TextField>\r\n                                    ) : (\r\n                                        <TextField error inputRef={costRef} type=\"text\" inputMode=\"decimal\" fullWidth label=\"Total Cost\" variant=\"standard\"></TextField>\r\n                                    )}\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    {formValidity.description ? (\r\n                                        <TextField inputRef={descriptionRef} fullWidth id=\"standard-multiline-static\" label=\"Description\" variant=\"standard\" multiline rows={2}></TextField>\r\n                                    ) :\r\n                                        (\r\n                                            <TextField inputRef={descriptionRef} fullWidth error id=\"standard-multiline-static\" label=\"Description\" variant=\"standard\" multiline rows={2}></TextField>\r\n                                        )}\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                </DialogContent>\r\n\r\n                <DialogActions style={{ background: \"#DFDFDF \" }}>\r\n                    <Button onClick={handleClose} style={{ border: \"2px solid black\", background: \"#DFDFDF\", color: \"#191919\", padding: \"0.40em 4em\", margin: \"2em 2em 2em 0\" }}>CANCEL</Button>\r\n                    <Button onClick={submitHandler} className=\"Confirmbut\" style={{ background: \"#191919\", color: \"#ffffff\", padding: \"0.5em 3em\", margin: \"2em 2em 2em 0\" }}>CONFIRM</Button>\r\n                </DialogActions>\r\n\r\n            </Dialog>\r\n        </div >\r\n    );\r\n}\r\n\r\n","import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nimport Topbar from '../Utilities/Topbar';\r\nimport './Inventory.css';\r\n\r\nimport . from \"../../.\";\r\nimport InventoryCard from '../UI/InventoryCard';\r\nimport InventoryCardUnchecked from '../UI/InventoryCardUnchecked';\r\nimport InventoryForm from './InventoryForm.js';\r\n\r\nconst Inventory = () => {\r\n\r\n    const [invIn, setInvIn] = useState([]);\r\n    const [invOut, setInvOut] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const db = ..database().ref(\"Inventory/Instock\");\r\n        db.on(\"value\", (response) => {\r\n            const data = response.val();\r\n            let invItem_in = [];\r\n            for (const key in data) {\r\n                invItem_in.push({\r\n                    id: key,\r\n                    price: data[key].Price,\r\n                    instock: data[key].Instock,\r\n                    description: data[key].Description,\r\n                    name: data[key].Name,\r\n                });\r\n            }\r\n            setInvIn(invItem_in);\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const db1 = ..database().ref(\"Inventory/Outstock\");\r\n        db1.on(\"value\", (response) => {\r\n            const data = response.val();\r\n            let invItem_out = []\r\n            for (const key in data) {\r\n                invItem_out.push({\r\n                    id: key,\r\n                    price: data[key].Price,\r\n                    instock: data[key].Instock,\r\n                    description: data[key].Description,\r\n                    name: data[key].Name,\r\n                });\r\n            }\r\n            setInvOut(invItem_out);\r\n        });\r\n    }, []);\r\n\r\n    // ###################### Event Handling\r\n\r\n    const updatedStatusHandler = (data) => {\r\n        // console.log(data);\r\n\r\n        const db = ..database().ref('/Inventory/Outstock/').child(data.id);\r\n        // console.log(db);\r\n        db.set({\r\n            Id: data.id,\r\n            Name: data.name,\r\n            Description: data.description,\r\n            Price: data.price,\r\n            Instock: !data.instock,\r\n        });\r\n\r\n        const rem_db = ..database().ref('/Inventory/Instock/').child(data.id);\r\n        rem_db.remove();\r\n    };\r\n\r\n    const uncheckedStatusHandler = (data) => {\r\n        // console.log(data);\r\n        // console.log(data.instock)\r\n        const db = ..database().ref('/Inventory/Instock/').child(data.id);\r\n        // console.log(db);\r\n        db.set({\r\n            Id: data.id,\r\n            Name: data.name,\r\n            Description: data.description,\r\n            Price: data.price,\r\n            Instock: !data.instock,\r\n        });\r\n\r\n        const rem_db = ..database().ref('/Inventory/Outstock/').child(data.id);\r\n        rem_db.remove();\r\n    }\r\n\r\n    const inv_list = invIn.map(item => (\r\n        <InventoryCard\r\n            key={item.id}\r\n            id={item.id}\r\n            price={item.price}\r\n            description={item.description}\r\n            name={item.name}\r\n            instock={item.instock}\r\n            updatedStatusHandler={updatedStatusHandler}\r\n        />\r\n    ));\r\n\r\n    const inv_list_out = invOut.map(item => (\r\n        <InventoryCardUnchecked\r\n            key={item.id}\r\n            id={item.id}\r\n            price={item.price}\r\n            description={item.description}\r\n            name={item.name}\r\n            instock={item.instock}\r\n            uncheckedStatusHandler={uncheckedStatusHandler}\r\n        />\r\n    ))\r\n\r\n    return (\r\n        <Grid container>\r\n            {/* <Topbar /> */}\r\n            <h1>Inventory</h1>\r\n            {/* <br></br> */}\r\n            <InventoryForm/>\r\n            {/* <br></br> */}\r\n            <Grid container spacing={3} className=\"main_right\">\r\n                {inv_list}\r\n                {inv_list_out}\r\n            </Grid>\r\n\r\n        </Grid>\r\n    );\r\n}\r\nexport default Inventory;","import React, { useRef, useContext } from 'react'\r\nimport { Grid, Paper, Avatar, TextField, Button, Typography, Link } from '@material-ui/core';\r\nimport AuthContext from '../../Store/auth-context';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\r\n// import Checkbox from '@material-ui/core/Checkbox';\r\nconst Login = () => {\r\n\r\n    const paperStyle = { padding: 20, height: '57vh', width: 500, margin: \"20px auto\", backgroundColor: \"#fafafa\" }\r\n    const avatarStyle = { backgroundColor: '#1bbd7e' }\r\n    const btnstyle = { margin: '8px 0' }\r\n\r\n    const history = useHistory();\r\n    const emailRef = useRef();\r\n    const passwordRef = useRef();\r\n\r\n    const authCtx = useContext(AuthContext);\r\n\r\n    // const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const submitHandler = (event) => {\r\n\r\n        event.preventDefault();\r\n\r\n        const enteredEmail = emailRef.current.value;\r\n        const enteredPassword = passwordRef.current.value;\r\n\r\n        const url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCir6THbXYEXyts-owoowDVRo7XVXqZPFQ';\r\n\r\n        fetch(url, {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                email: enteredEmail,\r\n                password: enteredPassword,\r\n                returnSecureToken: true,\r\n            }),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        })\r\n            .then((res) => {\r\n                //   setIsLoading(false);\r\n                if (res.ok) {\r\n                    return res.json();\r\n                } else {\r\n                    return res.json().then((data) => {\r\n                        let errorMessage = 'Authentication failed!';\r\n                        throw new Error(errorMessage);\r\n                    });\r\n                }\r\n            })\r\n            .then((data) => {\r\n                console.log(data);\r\n                authCtx.login(data.idToken);\r\n                console.log(authCtx)\r\n                // history.replace('/Home');\r\n            })\r\n            .catch((err) => {\r\n                alert(err.message);\r\n            });\r\n\r\n    }\r\n\r\n    return (\r\n        <Grid>\r\n            <Paper elevation={0} style={paperStyle}>\r\n                <Grid align='center'>\r\n                    <Avatar style={avatarStyle}>R</Avatar>\r\n                    <h2>Sign In</h2>\r\n                </Grid>\r\n                <form onSubmit={submitHandler}>\r\n\r\n                    <TextField label='Username' placeholder='Enter username' inputRef={emailRef} fullWidth required />\r\n                    <br />\r\n                    <br />\r\n                    <TextField label='Password' placeholder='Enter password' type='password' inputRef={passwordRef} fullWidth required />\r\n                    <br />\r\n                    <br />\r\n                    {/* <FormControlLabel\r\n                    control={\r\n                        <Checkbox\r\n                        name=\"checkedB\"\r\n                        color=\"primary\"\r\n                        />\r\n                        \r\n                    }\r\n                    label=\"Remember me\"\r\n                /> */}\r\n                    <br />\r\n                    <br />\r\n                    <Button type='submit' color='primary' variant=\"contained\" style={btnstyle} fullWidth>Sign in</Button>\r\n                    {/* <Typography >\r\n                    <Link href=\"#\" >\r\n                    Forgot password ?\r\n                    </Link>\r\n                </Typography> */}\r\n                </form>\r\n            </Paper>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Login","import React, { useContext } from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport './App.css';\r\n\r\nimport Home from './Components/Home/Home';\r\nimport PendingOrders from './Components/PendingOrders/PendingOrders';\r\nimport Statistics from './Components/Statistics/Statistics';\r\n// import AddCustomer from './Components/AddCustomer/AddCustomer';\r\nimport CustomerBoard from './Components/CustomerBoard/CustomerBoard';\r\nimport AddCustomerForm from './Components/AddCustomer/AddCustomerForm';\r\nimport Layout from './Components/Layout/Layout';\r\nimport Inventory from './Components/Inventory/Inventory';\r\nimport Login from './Components/Login/Login';\r\nimport AuthContext from './Store/auth-context';\r\n// import AddInventory from './Components/AddInventory/AddInventory';\r\n\r\nfunction App() {\r\n\r\n  const authCtx = useContext(AuthContext);\r\n\r\n  const isLoggedIn = authCtx.isLoggedIn;\r\n\r\n  return (\r\n    <Layout>\r\n\r\n      <Switch>\r\n\r\n        <Route path='/' exact>\r\n          {isLoggedIn && (\r\n            <Redirect to='/Home'></Redirect>\r\n          )}\r\n          {!isLoggedIn && (\r\n            <Redirect to='/Login' />\r\n          )}\r\n        </Route>\r\n\r\n        <Route path='/Login'>\r\n          {isLoggedIn && (\r\n            <Redirect to='/Home'></Redirect>\r\n          )}\r\n          {!isLoggedIn && (\r\n            <Login />\r\n          )}\r\n        </Route>\r\n\r\n        <Route path='/Home'>\r\n          {isLoggedIn && (\r\n            <Home />\r\n          )}\r\n          {!isLoggedIn && (\r\n            <Redirect to='/Login' />\r\n          )}\r\n        </Route>\r\n\r\n        <Route path='/AddCustomerForm'>\r\n          {isLoggedIn && (\r\n            <AddCustomerForm />\r\n          )}\r\n          {!isLoggedIn && (\r\n            <Redirect to='/Login' />\r\n          )}\r\n        </Route>\r\n\r\n        <Route path='/CustomerBoard'>\r\n          {isLoggedIn && (\r\n            <CustomerBoard />\r\n          )}\r\n          {!isLoggedIn && (\r\n            <Redirect to='/Login' />\r\n          )}\r\n        </Route>\r\n\r\n        <Route path='/Inventory'>\r\n          {isLoggedIn && (\r\n            <Inventory />\r\n          )}\r\n          {!isLoggedIn && (\r\n            <Redirect to='/Login' />\r\n          )}\r\n        </Route>\r\n\r\n        {/* <Route path='/AddInventory'>\r\n          <AddInventory />\r\n        </Route> */}\r\n        <Route path='/CompletedOrders'>\r\n          {isLoggedIn && (\r\n            <PendingOrders />\r\n          )}\r\n          {!isLoggedIn && (\r\n            <Redirect to='/Login' />\r\n          )}\r\n        </Route>\r\n\r\n        <Route path='/Statistics'>\r\n          {isLoggedIn && (\r\n            <Statistics />\r\n          )}\r\n          {!isLoggedIn && (\r\n            <Redirect to='/Login' />\r\n          )}\r\n        </Route>\r\n\r\n        <Route path='*'>\r\n          <Redirect to='/' />\r\n        </Route>\r\n\r\n      </Switch>\r\n\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\nimport { AuthContextProvider } from './Store/auth-context';\n\nReactDOM.render(\n    <AuthContextProvider>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </AuthContextProvider>,\n    document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"customer_card\":\"OrderCards_customer_card__32R9W\",\"order_details\":\"OrderCards_order_details__20f1_\",\"order_section\":\"OrderCards_order_section__1lVAl\",\"action_icons\":\"OrderCards_action_icons__2K6x8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"invent_item\":\"InventoryCard_invent_item__2p-d5\",\"typedish\":\"InventoryCard_typedish__2vpnS\",\"cost\":\"InventoryCard_cost__1X765\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"topbar\":\"AddCustomerForm_topbar__5eUjg\",\"home_heading\":\"AddCustomerForm_home_heading__3sLGn\",\"home_text_heading\":\"AddCustomerForm_home_text_heading__22Ull\",\"home_text_alt\":\"AddCustomerForm_home_text_alt__21PEU\",\"cus_form\":\"AddCustomerForm_cus_form__2MvHU\",\"right_grid\":\"AddCustomerForm_right_grid__2a_0g\",\"submit_btn\":\"AddCustomerForm_submit_btn__1731K\",\"hello\":\"AddCustomerForm_hello__2UNsC\"};"],"sourceRoot":""}